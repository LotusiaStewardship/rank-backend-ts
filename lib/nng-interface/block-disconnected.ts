// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { Block } from '../nng-interface/block.js';


export class BlockDisconnected {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):BlockDisconnected {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsBlockDisconnected(bb:flatbuffers.ByteBuffer, obj?:BlockDisconnected):BlockDisconnected {
  return (obj || new BlockDisconnected()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsBlockDisconnected(bb:flatbuffers.ByteBuffer, obj?:BlockDisconnected):BlockDisconnected {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new BlockDisconnected()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

block(obj?:Block):Block|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Block()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startBlockDisconnected(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addBlock(builder:flatbuffers.Builder, blockOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, blockOffset, 0);
}

static endBlockDisconnected(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createBlockDisconnected(builder:flatbuffers.Builder, blockOffset:flatbuffers.Offset):flatbuffers.Offset {
  BlockDisconnected.startBlockDisconnected(builder);
  BlockDisconnected.addBlock(builder, blockOffset);
  return BlockDisconnected.endBlockDisconnected(builder);
}
}
